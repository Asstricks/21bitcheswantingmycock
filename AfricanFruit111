local library = {}

local TweenService = game:GetService("TweenService")
function library:tween(object, properties, duration)
    local tween = TweenService:Create(object, TweenInfo.new(duration or 0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), properties)
    tween:Play()
end

local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")

-- Utility function to create objects
function library:create(Object, Properties, Parent)
    local Obj = Instance.new(Object)
    for i, v in pairs(Properties) do
        Obj[i] = v
    end
    if Parent then
        Obj.Parent = Parent
    end
    return Obj
end

-- Set draggable functionality
function library:set_draggable(gui)
    local dragging, dragStart, startPos
    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    uis.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Main UI Library Initialization
function library.new(library_title)
    local menu = {}
    menu.is_minimized = false
    menu.ui_size = UDim2.new(0, 750, 0, 550) -- Increased UI size

    -- ScreenGui
    local ScreenGui = library:create("ScreenGui", {
        ResetOnSpawn = false,
        ZIndexBehavior = Enum.ZIndexBehavior.Global,
        Name = "CustomUI"
    }, game:GetService("CoreGui"))

    -- Main Frame (UI Background)
    local MainFrame = library:create("ImageButton", {
        Name = "Main",
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Color3.fromRGB(15, 15, 15),
        BorderColor3 = Color3.fromRGB(78, 93, 234),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = menu.ui_size,
        Image = "http://www.roblox.com/asset/?id=7300333488",
        AutoButtonColor = false,
        Modal = true
    }, ScreenGui)

    library:set_draggable(MainFrame)

    -- UI Title
    local Title = library:create("TextLabel", {
        Name = "Title",
        BackgroundTransparency = 1,
        Size = UDim2.new(1, 0, 0, 30),
        Font = Enum.Font.Ubuntu,
        Text = library_title,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 16,
        TextXAlignment = Enum.TextXAlignment.Left,
        Position = UDim2.new(0, 10, 0, 0)
    }, MainFrame)

    -- Close Button
    local CloseButton = library:create("TextButton", {
        Name = "CloseButton",
        BackgroundTransparency = 1,
        Position = UDim2.new(1, -30, 0, 0),
        Size = UDim2.new(0, 30, 0, 30),
        Text = "X",
        Font = Enum.Font.Ubuntu,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 18
    }, MainFrame)

    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy() -- Destroy the entire UI when closed
    end)

    -- Minimize Button
    local MinimizeButton = library:create("TextButton", {
        Name = "MinimizeButton",
        BackgroundTransparency = 1,
        Position = UDim2.new(1, -60, 0, 0),
        Size = UDim2.new(0, 30, 0, 30),
        Text = "_",
        Font = Enum.Font.Ubuntu,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 18
    }, MainFrame)

    -- Minimize functionality
    MinimizeButton.MouseButton1Click:Connect(function()
        if menu.is_minimized then
            library:tween(MainFrame, { Size = menu.ui_size }, 0.4)
        else
            library:tween(MainFrame, { Size = UDim2.new(0, 750, 0, 35) }, 0.4)
        end
        menu.is_minimized = not menu.is_minimized
    end)

    -- Tab Buttons and Content Holder
    local TabButtons = library:create("Frame", {
        Name = "TabButtons",
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 10, 0, 35),
        Size = UDim2.new(0, 100, 1, -35)
    }, MainFrame)

    local Tabs = library:create("Frame", {
        Name = "Tabs",
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 120, 0, 35),
        Size = UDim2.new(1, -120, 1, -35)
    }, MainFrame)

    local UIListLayout = library:create("UIListLayout", {
        HorizontalAlignment = Enum.HorizontalAlignment.Left,
        Padding = UDim.new(0, 5)
    }, TabButtons)

    -- More UI logic can be added here (buttons, toggles, etc.)

    return menu
end

return library
